!function($,undefined){"use strict";var _document=document,_window=window,_null=null;_window.$us=_window.$us||{};const _REGEXP_EXTRACT_COORDINATES_=/^(-?[\d\.]+),(-?[\d\.]+)$/;_window.usGmapLoaded=function(){$us.$document.trigger('usGmapLoaded')};$us._wGmapsGeocodes={_maxAttempts:5,_tasks:{},add:function(key,callback){var self=this;self._tasks[''+key]={counter:0,running:!1,callback:callback,};return self.run.bind(self,key)},remove:function(key){var self=this;if(self._tasks[key]){delete self._tasks[key]}},run:function(key){var self=this,task=self._tasks[key];if($ush.isUndefined(task)||task.running){return}
if(task.counter>=self._maxAttempts){self.remove(key)}
if($.isFunction(task.callback)){task.counter++;task.running=!0;task.callback(function(){task.running=!1})}}};$us.wGmaps=function(container,options){var self=this;self.$container=$(container);if(self.$container.data('_inited')){return}
self.$container.data('_inited',1);self._mapInstance=_null;self.cookieName=self.$container.data('cookie-name');self.options=options||{};self.style={};self.uniqid=$ush.uniqid();var attributeName='data-api-key';if(self.$container.is('['+attributeName+']')){self._apiKey=self.$container.attr(attributeName);self.$container.removeAttr(attributeName)}
self._events={confirm:self._confirm.bind(self),redraw:self._redraw.bind(self),init:self._init.bind(self),};$us.$document.on('usGmapLoaded',self._events.init);if(self.cookieName){self.$container.on('click','.action_confirm_load',self._events.confirm);return}
if(!self.cookieName||$ush.getCookie(self.cookieName)){self[self.isGmapLoaded()?'_init':'_initAftetGmapLoaded']()}};$.extend($us.wGmaps.prototype,{isGmapLoaded:function(){return!!(_window.google||{})['maps']},_confirm:function(){var self=this;if($('input[name^='+self.cookieName+']:checked',self.$container).length){$ush.setCookie(self.cookieName,1,365)}
self.$container.html($ush.base64Decode(''+$('script[type="text/template"]',self.$container).text())).removeAttr('data-cookie-name');self[self.isGmapLoaded()?'_init':'_initAftetGmapLoaded']()},_init:function(){var self=this;if(self.$container.is('[data-cookie-name]')||!self.isGmapLoaded()){return}
var $mapJson=$('.w-map-json',self.$container);if($mapJson.is('[onclick]')){$.extend(self.options,$mapJson[0].onclick()||{});$mapJson.remove()}
var $styleJson=$('.w-map-style-json',self.$container);if($styleJson.is('[onclick]')){self.style=$styleJson[0].onclick()||{};$styleJson.remove()}
var mapOptions={el:'#'+self.$container.attr('id'),lat:0,lng:0,mapTypeId:google.maps.MapTypeId[self.options.maptype],type:self.options.type,zoom:self.options.zoom};if(self.options.hideControls){mapOptions.disableDefaultUI=!0}
if(self.options.disableZoom){mapOptions.scrollwheel=!1}
if(self.options.disableDragging&&(!$us.$html.hasClass('no-touch'))){mapOptions.draggable=!1}
self._mapInstance=new GMaps(mapOptions);if(self.style!=_null&&self.style!={}){self._mapInstance.map.setOptions({styles:self.style})}
var shouldRunGeoCode,matches=$ush.removeSpaces(''+self.options.address).match(_REGEXP_EXTRACT_COORDINATES_);if(matches){self.options.latitude=matches[1];self.options.longitude=matches[2];$ush.timeout(function(){self._mapInstance.setCenter(self.options.latitude,self.options.longitude)},1)}else{$us._wGmapsGeocodes.add(self.uniqid,function(stopGeocodeTask){self._mapGeoCode(self.uniqid,self.options.address,function(latitude,longitude){self.options.latitude=latitude;self.options.longitude=longitude;self._mapInstance.setCenter(latitude,longitude);if($.isFunction(stopGeocodeTask)){stopGeocodeTask()}},self.uniqid)})()}
$.each(self.options.markers,function(i,_){var markerOptions={};if(self.options.icon!=_null||self.options.markers[i].marker_img!=_null){var url,width,height;if(self.options.markers[i].marker_img!=_null){url=self.options.markers[i].marker_img[0];width=self.options.markers[i].marker_size[0];height=self.options.markers[i].marker_size[1]}else{url=self.options.icon.url;width=self.options.icon.size[0];height=self.options.icon.size[1]}
var size=new google.maps.Size($ush.parseInt(width),$ush.parseInt(height));markerOptions.icon={url:url,size:size,scaledSize:size,}}
if(self.options.markers[i]!=_null){var matches=$ush.removeSpaces(self.options.markers[i].address).match(_REGEXP_EXTRACT_COORDINATES_);if(matches){markerOptions.lat=matches[1];markerOptions.lng=matches[2];if(self.options.markers[i].html){markerOptions.infoWindow={content:self.options.markers[i].html}}
var marker=self._mapInstance.addMarker(markerOptions);if(self.options.markers[i].infowindow){marker.infoWindow.open(self._mapInstance.map,marker)}}else{var markerGeocodeId=self.uniqid+':'+i;$us._wGmapsGeocodes.add(markerGeocodeId,function(stopGeocodeTask){self._mapGeoCode(markerGeocodeId,self.options.markers[i].address,function(latitude,longitude){markerOptions.lat=latitude;markerOptions.lng=longitude;if(self.options.markers[i].html){markerOptions.infoWindow={content:self.options.markers[i].html}}
var marker=self._mapInstance.addMarker(markerOptions);if(self.options.markers[i].infowindow){marker.infoWindow.open($ush.clone(self._mapInstance.map,{shouldFocus:!1}),marker)}
if($.isFunction(stopGeocodeTask)){stopGeocodeTask()}})})()}}});$us.$canvas.on('contentChange',self._events.redraw);$us.$window.on('load',self._events.redraw)},_mapGeoCode:function(uniqid,address,callback){var self=this;GMaps.geocode({address:address,callback:function(results,status){if(status=='OK'){var location=results[0].geometry.location;if($.isFunction(callback)){callback.call(_null,location.lat(),location.lng(),results)}
$us._wGmapsGeocodes.remove(uniqid)}else if(status=='OVER_QUERY_LIMIT'){$ush.timeout($us._wGmapsGeocodes.bind(_null,uniqid),2000)}}})},_redraw:function(){var self=this;if(self.$container.is(':hidden')){return}
self.$container.css({height:'',width:''});self._mapInstance.refresh();var latitude=$ush.parseFloat(self.options.latitude),longitude=$ush.parseFloat(self.options.longitude);if(latitude&&longitude){self._mapInstance.setCenter(latitude,longitude)}},_initAftetGmapLoaded:function(){var $script=$('script#us-google-maps:first');if(!$script.is('[data-src]')){return}
$script.attr('src',(''+$script.data('src')).replace('&#038;','&')).removeAttr('data-src')}});$.fn.wGmaps=function(options){options=options||{};return this.each(function(){this._wGmaps=new $us.wGmaps(this,$ush.clone(options))})};$(function(){$('.w-map.provider_google').wGmaps()})}(jQuery)